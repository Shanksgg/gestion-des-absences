{"ast":null,"code":"import _asyncToGenerator from \"D:/Files/EMSI/S9/JEE/gestion-des-absences/frontend/AbsenceWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nexport class KeycloakSecurityService {\n  init() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.kc = new Keycloak({\n        url: \"http://localhost:8888\",\n        realm: \"jee-realm\",\n        clientId: \"jee-client\"\n      }), yield _this.kc.init({\n        onLoad: 'check-sso',\n        checkLoginIframe: false\n      });\n    })();\n  }\n}\nKeycloakSecurityService.ɵfac = function KeycloakSecurityService_Factory(t) {\n  return new (t || KeycloakSecurityService)();\n};\nKeycloakSecurityService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: KeycloakSecurityService,\n  factory: KeycloakSecurityService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,uBAAuB;EAI5BC,IAAI;IAAA;IAAA;MACR,KAAI,CAACC,EAAE,GAAG,IAAIC,QAAQ,CAAC;QACrBC,GAAG,EAAC,uBAAuB;QAC3BC,KAAK,EAAE,WAAW;QAClBC,QAAQ,EAAE;OACX,CAAC,QACI,KAAI,CAACJ,EAAE,CAACD,IAAI,CAAC;QACjBM,MAAM,EAAE,WAAW;QACnBC,gBAAgB,EAAE;OACnB,CAAC;IAAC;EACL;;;mBAdWR,uBAAuB;AAAA;;SAAvBA,uBAAuB;EAAAS,SAAvBT,uBAAuB;EAAAU,YAFtB;AAAM","names":["KeycloakSecurityService","init","kc","Keycloak","url","realm","clientId","onLoad","checkLoginIframe","factory","providedIn"],"sourceRoot":"","sources":["D:\\Files\\EMSI\\S9\\JEE\\gestion-des-absences\\frontend\\AbsenceWeb\\src\\app\\services\\keycloak-security.service.ts"],"sourcesContent":["import { Injectable, OnInit } from '@angular/core';\r\nimport  {KeycloakInstance, KeycloakProfile} from \"keycloak-js\";\r\nimport  {KeycloakService, KeycloakEventType} from \"keycloak-angular\";\r\n\r\ndeclare var  Keycloak :any;\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class KeycloakSecurityService {\r\n  public profile? : KeycloakProfile;\r\n  public kc! :KeycloakInstance;\r\n\r\n  async init() {\r\n    this.kc = new Keycloak({\r\n      url:\"http://localhost:8888\",\r\n      realm: \"jee-realm\",\r\n      clientId: \"jee-client\"\r\n    }),\r\n    await this.kc.init({\r\n      onLoad: 'check-sso',\r\n      checkLoginIframe: false\r\n    });\r\n  }\r\n\r\n  // public hasRoleIn(roles:string[]):boolean{\r\n  //   let userRoles = this.kc.getUserRoles();\r\n  //   for(let role of roles){\r\n  //     if (userRoles.includes(role)) return true;\r\n  //   } return false;\r\n  // }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}