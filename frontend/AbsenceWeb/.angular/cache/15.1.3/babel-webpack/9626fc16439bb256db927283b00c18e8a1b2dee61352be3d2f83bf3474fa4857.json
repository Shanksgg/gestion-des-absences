{"ast":null,"code":"import _asyncToGenerator from \"D:/Files/EMSI/S9/JEE/gestion-des-absences/frontend/AbsenceWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { KeycloakAuthGuard } from 'keycloak-angular';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"keycloak-angular\";\nexport class AuthGuard extends KeycloakAuthGuard {\n  constructor(router, keycloak) {\n    super(router, keycloak);\n    this.router = router;\n    this.keycloak = keycloak;\n  }\n  isAccessAllowed(route, state) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (!_this.authenticated) {\n        yield _this.keycloak.login({\n          redirectUri: window.location.origin + state.url\n        });\n      }\n      const requiredRoles = route.data['roles'];\n      if (!(requiredRoles instanceof Array) || requiredRoles.length === 0) {\n        return true;\n      }\n      return requiredRoles.every(role => _this.roles.includes());\n    })();\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.KeycloakService));\n};\nAuthGuard.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AuthGuard,\n  selectors: [[\"app-guards\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 0,\n  template: function AuthGuard_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"guards works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";AAEA,SAASA,iBAAiB,QAAyB,kBAAkB;;;;AAOrE,OAAM,MAAOC,SAAU,SAAQD,iBAAiB;EAC9CE,YACgCC,MAAc,EACvBC,QAAyB;IAE5C,KAAK,CAACD,MAAM,EAAEC,QAAQ,CAAC;IAHK,WAAM,GAAND,MAAM;IACf,aAAQ,GAARC,QAAQ;EAG/B;EAEaC,eAAe,CACxBC,KAA6B,EAC7BC,KAA0B;IAAA;IAAA;MAE5B,IAAG,CAAC,KAAI,CAACC,aAAa,EAAE;QACtB,MAAM,KAAI,CAACJ,QAAQ,CAACK,KAAK,CAAC;UACxBC,WAAW,EAAEC,MAAM,CAACC,QAAQ,CAACC,MAAM,GAAGN,KAAK,CAACO;SAC7C,CAAC;;MAGJ,MAAMC,aAAa,GAAGT,KAAK,CAACU,IAAI,CAAC,OAAO,CAAC;MAEzC,IAAG,EAAED,aAAa,YAAYE,KAAK,CAAC,IAAIF,aAAa,CAACG,MAAM,KAAK,CAAC,EAAE;QAClE,OAAO,IAAI;;MAEb,OAAOH,aAAa,CAACI,KAAK,CAAEC,IAAI,IAAK,KAAI,CAACC,KAAK,CAACC,QAAQ,EAAE,CAAC;IAAA;EAC7D;;AAxBWrB,SAAU;mBAAVA,SAAS;AAAA;AAATA,SAAU;QAAVA,SAAS;EAAAsB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCTtBC,yBAAG;MAAAA,6BAAa;MAAAA,iBAAI","names":["KeycloakAuthGuard","AuthGuard","constructor","router","keycloak","isAccessAllowed","route","state","authenticated","login","redirectUri","window","location","origin","url","requiredRoles","data","Array","length","every","role","roles","includes","selectors","features","decls","vars","template","i0"],"sourceRoot":"","sources":["D:\\Files\\EMSI\\S9\\JEE\\gestion-des-absences\\frontend\\AbsenceWeb\\src\\app\\guards\\guards.component.ts","D:\\Files\\EMSI\\S9\\JEE\\gestion-des-absences\\frontend\\AbsenceWeb\\src\\app\\guards\\guards.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { KeycloakAuthGuard, KeycloakService } from 'keycloak-angular'\n\n@Component({\n  selector: 'app-guards',\n  templateUrl: './guards.component.html',\n  styleUrls: ['./guards.component.css']\n})\nexport class AuthGuard extends KeycloakAuthGuard{\n  constructor(\n      protected override readonly router: Router,\n      protected readonly keycloak: KeycloakService\n  ) {\n      super(router, keycloak);\n  }\n\n  public async isAccessAllowed(\n      route: ActivatedRouteSnapshot,\n      state: RouterStateSnapshot\n  ) {\n    if(!this.authenticated) {\n      await this.keycloak.login({\n        redirectUri: window.location.origin + state.url\n      });\n    }\n\n    const requiredRoles = route.data['roles'];\n\n    if(!(requiredRoles instanceof Array) || requiredRoles.length === 0) {\n      return true;\n    }\n    return requiredRoles.every((role) => this.roles.includes())\n  }\n}\n","<p>guards works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}