{"ast":null,"code":"import _asyncToGenerator from \"D:/Files/EMSI/S9/JEE/gestion-des-absences/frontend/AbsenceWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { KeycloakAuthGuard } from 'keycloak-angular';\nlet AuthGuard = class AuthGuard extends KeycloakAuthGuard {\n  constructor(router, keycloak) {\n    super(router, keycloak);\n    this.router = router;\n    this.keycloak = keycloak;\n  }\n  isAccessAllowed(route, state) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (!_this.authenticated) {\n        yield _this.keycloak.login({\n          redirectUri: window.location.origin + state.url\n        });\n      }\n      const requiredRoles = route.data['roles'];\n      if (!(requiredRoles instanceof Array) || requiredRoles.length === 0) {\n        return true;\n      }\n      return requiredRoles.every(role => _this.roles.includes(role));\n    })();\n  }\n};\nAuthGuard = __decorate([Component({\n  selector: 'app-guards',\n  templateUrl: './guards.component.html',\n  styleUrls: ['./guards.component.css']\n})], AuthGuard);\nexport { AuthGuard };","map":{"version":3,"mappings":";;AAAA,SAASA,SAAS,QAAQ,eAAe;AAEzC,SAASC,iBAAiB,QAAyB,kBAAkB;AAO9D,IAAMC,SAAS,GAAf,MAAMA,SAAU,SAAQD,iBAAiB;EAC9CE,YACgCC,MAAc,EACvBC,QAAyB;IAE5C,KAAK,CAACD,MAAM,EAAEC,QAAQ,CAAC;IAHK,WAAM,GAAND,MAAM;IACf,aAAQ,GAARC,QAAQ;EAG/B;EAEaC,eAAe,CACxBC,KAA6B,EAC7BC,KAA0B;IAAA;IAAA;MAE5B,IAAG,CAAC,KAAI,CAACC,aAAa,EAAE;QACtB,MAAM,KAAI,CAACJ,QAAQ,CAACK,KAAK,CAAC;UACxBC,WAAW,EAAEC,MAAM,CAACC,QAAQ,CAACC,MAAM,GAAGN,KAAK,CAACO;SAC7C,CAAC;;MAGJ,MAAMC,aAAa,GAAGT,KAAK,CAACU,IAAI,CAAC,OAAO,CAAC;MAEzC,IAAG,EAAED,aAAa,YAAYE,KAAK,CAAC,IAAIF,aAAa,CAACG,MAAM,KAAK,CAAC,EAAE;QAClE,OAAO,IAAI;;MAEb,OAAOH,aAAa,CAACI,KAAK,CAAEC,IAAI,IAAK,KAAI,CAACC,KAAK,CAACC,QAAQ,CAACF,IAAI,CAAC,CAAC;IAAC;EAClE;CACD;AAzBYnB,SAAS,eALrBF,SAAS,CAAC;EACTwB,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,GACWxB,SAAS,CAyBrB;SAzBYA,SAAS","names":["Component","KeycloakAuthGuard","AuthGuard","constructor","router","keycloak","isAccessAllowed","route","state","authenticated","login","redirectUri","window","location","origin","url","requiredRoles","data","Array","length","every","role","roles","includes","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\Files\\EMSI\\S9\\JEE\\gestion-des-absences\\frontend\\AbsenceWeb\\src\\app\\guards\\guards.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { KeycloakAuthGuard, KeycloakService } from 'keycloak-angular'\n\n@Component({\n  selector: 'app-guards',\n  templateUrl: './guards.component.html',\n  styleUrls: ['./guards.component.css']\n})\nexport class AuthGuard extends KeycloakAuthGuard{\n  constructor(\n      protected override readonly router: Router,\n      protected readonly keycloak: KeycloakService\n  ) {\n      super(router, keycloak);\n  }\n\n  public async isAccessAllowed(\n      route: ActivatedRouteSnapshot,\n      state: RouterStateSnapshot\n  ) {\n    if(!this.authenticated) {\n      await this.keycloak.login({\n        redirectUri: window.location.origin + state.url\n      });\n    }\n\n    const requiredRoles = route.data['roles'];\n\n    if(!(requiredRoles instanceof Array) || requiredRoles.length === 0) {\n      return true;\n    }\n    return requiredRoles.every((role) => this.roles.includes(role));\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}