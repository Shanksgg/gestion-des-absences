{"ast":null,"code":"import _asyncToGenerator from \"D:/Files/EMSI/S9/JEE/gestion-des-absences/frontend/AbsenceWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { KeycloakEventType } from \"keycloak-angular\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"keycloak-angular\";\nexport class KeycloakSecurityService {\n  constructor(kcService) {\n    this.kcService = kcService;\n    this.init2();\n  }\n  ngOnInit() {}\n  init2() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.kcService.keycloakEvents$.subscribe({\n        next: e => {\n          if (e.type == KeycloakEventType.OnAuthSuccess) {\n            _this.kcService.loadUserProfile().then(profile => {\n              _this.profile = profile;\n            });\n          }\n        }\n      });\n    })();\n  }\n  init() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.kc = new Keycloak({\n        url: \"http://localhost:8888\",\n        realm: \"jee-realm\",\n        clientId: \"jee-client\"\n      });\n      yield _this2.kc.init({\n        onLoad: 'login-required'\n      });\n      // console.log(this.kc.token)\n    })();\n  }\n}\n\nKeycloakSecurityService.ɵfac = function KeycloakSecurityService_Factory(t) {\n  return new (t || KeycloakSecurityService)(i0.ɵɵinject(i1.KeycloakService));\n};\nKeycloakSecurityService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: KeycloakSecurityService,\n  factory: KeycloakSecurityService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAEA,SAA0BA,iBAAiB,QAAO,kBAAkB;;;AAMpE,OAAM,MAAOC,uBAAuB;EAIlCC,YAA6BC,SAA0B;IAA1B,cAAS,GAATA,SAAS;IAAqB,IAAI,CAACC,KAAK,EAAE;EACvE;EAEAC,QAAQ,IAER;EACMD,KAAK;IAAA;IAAA;MACT,KAAI,CAACD,SAAS,CAACG,eAAe,CAACC,SAAS,CAAC;QACvCC,IAAI,EAAGC,CAAC,IAAI;UACV,IAAIA,CAAC,CAACC,IAAI,IAAIV,iBAAiB,CAACW,aAAa,EAAE;YAC7C,KAAI,CAACR,SAAS,CAACS,eAAe,EAAE,CAACC,IAAI,CAACC,OAAO,IAAE;cAC7C,KAAI,CAACA,OAAO,GAACA,OAAO;YACtB,CAAC,CAAC;;QAEN;OACD,CAAC;IAAC;EACL;EAEMC,IAAI;IAAA;IAAA;MACR,MAAI,CAACC,EAAE,GAAG,IAAIC,QAAQ,CAAC;QACrBC,GAAG,EAAC,uBAAuB;QAC3BC,KAAK,EAAE,WAAW;QAClBC,QAAQ,EAAE;OACX,CAAC;MACF,MAAM,MAAI,CAACJ,EAAE,CAACD,IAAI,CAAC;QACjBM,MAAM,EAAE;OACT,CAAC;MACF;IAAA;EACF;;;;mBAhCWpB,uBAAuB;AAAA;;SAAvBA,uBAAuB;EAAAqB,SAAvBrB,uBAAuB;EAAAsB,YAFtB;AAAM","names":["KeycloakEventType","KeycloakSecurityService","constructor","kcService","init2","ngOnInit","keycloakEvents$","subscribe","next","e","type","OnAuthSuccess","loadUserProfile","then","profile","init","kc","Keycloak","url","realm","clientId","onLoad","factory","providedIn"],"sourceRoot":"","sources":["D:\\Files\\EMSI\\S9\\JEE\\gestion-des-absences\\frontend\\AbsenceWeb\\src\\app\\services\\keycloak-security.service.ts"],"sourcesContent":["import { Injectable, OnInit } from '@angular/core';\r\nimport  {KeycloakInstance, KeycloakProfile} from \"keycloak-js\";\r\nimport  {KeycloakService, KeycloakEventType} from \"keycloak-angular\";\r\n\r\ndeclare var  Keycloak :any;\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class KeycloakSecurityService implements OnInit{\r\n  public profile? : KeycloakProfile;\r\n  public kc! :KeycloakInstance;\r\n\r\n  constructor(private readonly kcService: KeycloakService) { this.init2();\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n  async init2(){\r\n    this.kcService.keycloakEvents$.subscribe({\r\n      next: (e) => {\r\n        if (e.type == KeycloakEventType.OnAuthSuccess) {\r\n          this.kcService.loadUserProfile().then(profile=>{\r\n            this.profile=profile;\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  async init() {\r\n    this.kc = new Keycloak({\r\n      url:\"http://localhost:8888\",\r\n      realm: \"jee-realm\",\r\n      clientId: \"jee-client\"\r\n    })\r\n    await this.kc.init({\r\n      onLoad: 'login-required',\r\n    });\r\n    // console.log(this.kc.token)\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}