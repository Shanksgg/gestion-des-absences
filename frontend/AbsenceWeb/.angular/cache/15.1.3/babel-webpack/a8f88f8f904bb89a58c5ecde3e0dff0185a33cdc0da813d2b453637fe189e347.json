{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./keycloak-security.service\";\nexport class ProfessorService {\n  constructor(http, key) {\n    this.http = http;\n    this.key = key;\n  }\n  getProfessors() {\n    return this.http.get(\"http://localhost:8080/PROFESSOR-SERVICE/professors\", {\n      headers: new HttpHeaders({\n        Authorization: 'Bearer ' + this.key.kcInstance.token\n      })\n    });\n  }\n}\nProfessorService.ɵfac = function ProfessorService_Factory(t) {\n  return new (t || ProfessorService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.KeycloakSecurityService));\n};\nProfessorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProfessorService,\n  factory: ProfessorService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAoBA,WAAW,QAAO,sBAAsB;;;;AAO5D,OAAM,MAAOC,gBAAgB;EAE3BC,YAAoBC,IAAgB,EAAUC,GAA4B;IAAtD,SAAI,GAAJD,IAAI;IAAsB,QAAG,GAAHC,GAAG;EACjD;EAEOC,aAAa;IAClB,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,oDAAoD,EACvE;MACEC,OAAO,EAAE,IAAIP,WAAW,CAAC;QACzBQ,aAAa,EAAE,SAAS,GAAG,IAAI,CAACJ,GAAG,CAACK,UAAU,CAACC;OAC9C;KACF,CAAC;EACN;;;mBAZWT,gBAAgB;AAAA;;SAAhBA,gBAAgB;EAAAU,SAAhBV,gBAAgB;EAAAW,YAFf;AAAM","names":["HttpHeaders","ProfessorService","constructor","http","key","getProfessors","get","headers","Authorization","kcInstance","token","factory","providedIn"],"sourceRoot":"","sources":["D:\\Files\\EMSI\\S9\\JEE\\gestion-des-absences\\frontend\\AbsenceWeb\\src\\app\\services\\professor.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {KeycloakSecurityService} from \"./keycloak-security.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfessorService {\n\n  constructor(private http: HttpClient, private key: KeycloakSecurityService) {\n  }\n\n  public getProfessors(): Observable<any> {\n    return this.http.get(\"http://localhost:8080/PROFESSOR-SERVICE/professors\",\n      {\n        headers: new HttpHeaders({\n        Authorization: 'Bearer ' + this.key.kcInstance.token,\n        })\n      });\n  };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}