{"ast":null,"code":"import _asyncToGenerator from \"D:/Files/EMSI/S9/JEE/gestion-des-absences/frontend/AbsenceWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { KeycloakEventType } from \"keycloak-angular\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"keycloak-angular\";\nexport class KeycloakSecurityService {\n  constructor(kcService) {\n    this.kcService = kcService;\n    this.ngOnInit();\n    this.kcService.isLoggedIn().then(loggedIn => {\n      if (loggedIn) {\n        console.log(this.kcService.getUsername());\n      }\n    }).catch(reason => console.log(reason));\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      let isLogged = yield _this.kcService.isLoggedIn();\n      if (isLogged) {\n        _this.profile = yield _this.kcService.loadUserProfile();\n      }\n    })();\n  }\n  init2() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.kcService.keycloakEvents$.subscribe({\n        next: e => {\n          if (e.type == KeycloakEventType.OnAuthSuccess) {\n            _this2.kcService.loadUserProfile().then(profile => {\n              _this2.profile = profile;\n            });\n          }\n        }\n      });\n    })();\n  }\n  init() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      _this3.kc = new Keycloak({\n        url: \"http://localhost:8888\",\n        realm: \"jee-realm\",\n        clientId: \"jee-client\"\n      });\n      yield _this3.kc.init({\n        onLoad: 'login-required',\n        checkLoginIframe: false\n      });\n    })();\n  }\n}\nKeycloakSecurityService.ɵfac = function KeycloakSecurityService_Factory(t) {\n  return new (t || KeycloakSecurityService)(i0.ɵɵinject(i1.KeycloakService));\n};\nKeycloakSecurityService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: KeycloakSecurityService,\n  factory: KeycloakSecurityService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAEA,SAA0BA,iBAAiB,QAAO,kBAAkB;;;AAMpE,OAAM,MAAOC,uBAAuB;EAIlCC,YAA6BC,SAA0B;IAA1B,cAAS,GAATA,SAAS;IACpC,IAAI,CAACC,QAAQ,EAAE;IACf,IAAI,CAACD,SAAS,CACTE,UAAU,EAAE,CACZC,IAAI,CAAEC,QAAQ,IAAG;MAChB,IAAIA,QAAQ,EAAG;QACbC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,SAAS,CAACO,WAAW,EAAE,CAAC;;IAE7C,CAAC,CAAC,CACDC,KAAK,CAAEC,MAAM,IAAIJ,OAAO,CAACC,GAAG,CAAGG,MAAM,CAAE,CAAC;EAC/C;EAEaR,QAAQ;IAAA;IAAA;MACnB,IAAIS,QAAQ,SAAS,KAAI,CAACV,SAAS,CAACE,UAAU,EAAE;MAChD,IAAGQ,QAAQ,EAAE;QACX,KAAI,CAACC,OAAO,SAAS,KAAI,CAACX,SAAS,CAACY,eAAe,EAAE;;IACtD;EACH;EACMC,KAAK;IAAA;IAAA;MACT,MAAI,CAACb,SAAS,CAACc,eAAe,CAACC,SAAS,CAAC;QACvCC,IAAI,EAAGC,CAAC,IAAI;UACV,IAAIA,CAAC,CAACC,IAAI,IAAIrB,iBAAiB,CAACsB,aAAa,EAAE;YAC7C,MAAI,CAACnB,SAAS,CAACY,eAAe,EAAE,CAACT,IAAI,CAACQ,OAAO,IAAE;cAC7C,MAAI,CAACA,OAAO,GAACA,OAAO;YACtB,CAAC,CAAC;;QAEN;OACD,CAAC;IAAC;EACL;EAEMS,IAAI;IAAA;IAAA;MACR,MAAI,CAACC,EAAE,GAAG,IAAIC,QAAQ,CAAC;QACrBC,GAAG,EAAC,uBAAuB;QAC3BC,KAAK,EAAE,WAAW;QAClBC,QAAQ,EAAE;OACX,CAAC;MACF,MAAM,MAAI,CAACJ,EAAE,CAACD,IAAI,CAAC;QACjBM,MAAM,EAAE,gBAAgB;QACxBC,gBAAgB,EAAE;OACnB,CAAC;IAAC;EACL;;;mBA5CW7B,uBAAuB;AAAA;;SAAvBA,uBAAuB;EAAA8B,SAAvB9B,uBAAuB;EAAA+B,YAFtB;AAAM","names":["KeycloakEventType","KeycloakSecurityService","constructor","kcService","ngOnInit","isLoggedIn","then","loggedIn","console","log","getUsername","catch","reason","isLogged","profile","loadUserProfile","init2","keycloakEvents$","subscribe","next","e","type","OnAuthSuccess","init","kc","Keycloak","url","realm","clientId","onLoad","checkLoginIframe","factory","providedIn"],"sourceRoot":"","sources":["D:\\Files\\EMSI\\S9\\JEE\\gestion-des-absences\\frontend\\AbsenceWeb\\src\\app\\services\\keycloak-security.service.ts"],"sourcesContent":["import { Injectable, OnInit } from '@angular/core';\r\nimport  {KeycloakInstance, KeycloakProfile} from \"keycloak-js\";\r\nimport  {KeycloakService, KeycloakEventType} from \"keycloak-angular\";\r\n\r\ndeclare var  Keycloak :any;\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class KeycloakSecurityService {\r\n  public profile? : KeycloakProfile;\r\n  public kc! :KeycloakInstance;\r\n\r\n  constructor(private readonly kcService: KeycloakService) {\r\n    this.ngOnInit();\r\n    this.kcService\r\n        .isLoggedIn()\r\n        .then( loggedIn => {\r\n          if( loggedIn ) {\r\n            console.log(this.kcService.getUsername());\r\n          }\r\n        })\r\n        .catch( reason => console.log ( reason ));\r\n  }\r\n\r\n  public async ngOnInit() {\r\n    let isLogged = await this.kcService.isLoggedIn();\r\n    if(isLogged) {\r\n      this.profile = await this.kcService.loadUserProfile();\r\n    }\r\n  }\r\n  async init2(){\r\n    this.kcService.keycloakEvents$.subscribe({\r\n      next: (e) => {\r\n        if (e.type == KeycloakEventType.OnAuthSuccess) {\r\n          this.kcService.loadUserProfile().then(profile=>{\r\n            this.profile=profile;\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  async init() {\r\n    this.kc = new Keycloak({\r\n      url:\"http://localhost:8888\",\r\n      realm: \"jee-realm\",\r\n      clientId: \"jee-client\"\r\n    })\r\n    await this.kc.init({\r\n      onLoad: 'login-required',\r\n      checkLoginIframe: false\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}